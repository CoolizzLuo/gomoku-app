{"version":3,"sources":["utils.js","components/Modal.js","components/GameBoard.js","constants/data.js","components/GameInfo.js","components/Footer.js","components/App.js","index.js"],"names":["countTotal","squares","currentY","currentX","directionY","directionX","tempColor","tempY","tempX","total","chessArr","push","calculateWinner","y","x","current","chess","every","row","col","ModalWrapper","styled","div","isShow","Modal","msg","showing","reset","useState","setIsShow","onClick","BoardWrapper","hover","SquareWrapper","mark","isMark","includes","GameBoard","winner","winnerBoard","map","row_square","col_square","className","GameInfoWrapper","Button","button","active","GameInfo","status","stepNumber","history","handleMove","moves","useMemo","step","move","FooterWrapper","footer","Footer","href","App","Array","fill","coordinate","setHistory","blackIsNext","setBlackIsNext","setStepNumber","currentStatus","statusMsg","tempBoard","JSON","parse","stringify","forEach","handleClick","useCallback","newHistory","slice","length","renderModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0aafa248.chunk.js","sourcesContent":["function countTotal(squares, currentY, currentX, directionY, directionX) {\r\n  const tempColor = squares[currentY][currentX]\r\n  let tempY = currentY + directionY\r\n  let tempX = currentX + directionX\r\n  let total = 0\r\n  const chessArr = []\r\n\r\n  while(squares[tempY] && squares[tempY][tempX] === tempColor) {\r\n    chessArr.push([tempY, tempX])\r\n    total++\r\n    tempY += directionY\r\n    tempX += directionX\r\n  }\r\n\r\n  return [total, chessArr];\r\n}\r\n\r\nexport function calculateWinner(squares, y, x) {\r\n  if (y === null && x === null) return\r\n  if (countTotal(squares, y, x, 1, 0)[0] + countTotal(squares, y, x, -1, 0)[0] >= 4) {\r\n    return {\r\n      current: squares[y][x], \r\n      chess: [...countTotal(squares, y, x, 1, 0)[1], ...countTotal(squares, y, x, -1, 0)[1], [y, x]]\r\n    }\r\n  }\r\n  if (countTotal(squares, y, x, 0, 1)[0] + countTotal(squares, y, x, 0, -1)[0] >= 4) {\r\n    return {\r\n      current: squares[y][x], \r\n      chess: [...countTotal(squares, y, x, 0, 1)[1], ...countTotal(squares, y, x, 0, -1)[1], [y, x]]\r\n    }\r\n  }\r\n  if (countTotal(squares, y, x, 1, 1)[0] + countTotal(squares, y, x, -1, -1)[0] >= 4) {\r\n    return {\r\n      current: squares[y][x], \r\n      chess: [...countTotal(squares, y, x, 1, 1)[1], ...countTotal(squares, y, x, -1, -1)[1], [y, x]]\r\n    }\r\n  }\r\n  if (countTotal(squares, y, x, 1, -1)[0] + countTotal(squares, y, x, -1, 1)[0] >= 4) {\r\n    return {\r\n      current: squares[y][x], \r\n      chess: [...countTotal(squares, y, x, 1, -1)[1], ...countTotal(squares, y, x, -1, 1)[1], [y, x]]\r\n    }\r\n  }\r\n\r\n  if (squares.every((row) => row.every((col) => col))) {\r\n    return \"draw\";\r\n  }\r\n  \r\n  return null\r\n}","import { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ModalWrapper = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  text-align: center;\r\n  padding: 5rem 1rem 0;\r\n  background: rgba(0, 0, 0, .8);\r\n  transition: all .2s;\r\n  z-index: 3;\r\n  user-select: none;\r\n  animation: zoom-in 1s;\r\n  ${({isShow}) => !isShow && `\r\n    display: none;\r\n  `}\r\n\r\n  @keyframes zoom-in {\r\n    from {opacity: 0;}\r\n    to {opacity: 1;}\r\n  }\r\n\r\n  h2 {\r\n    color: #eee;\r\n    font-size: 8rem;\r\n  }\r\n\r\n  div {\r\n    margin: 10rem auto;\r\n    padding: 0 5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  button {\r\n    min-width: 12rem;\r\n    font-size: 2rem;\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 12px;\r\n    color: #111;\r\n    background: rgba(200, 200, 200, .6);\r\n    box-shadow: .2rem .2rem .2rem #333;\r\n    cursor: pointer;\r\n    transition: all .2s;\r\n\r\n    & + button {\r\n      margin-left: 10rem;\r\n    }\r\n    &:active {\r\n      transform: translate(.5rem, .8rem);\r\n      box-shadow: none;\r\n    }\r\n    &:hover {\r\n      background: #666;\r\n      color: #ccc;\r\n    }\r\n  }\r\n`\r\n\r\nconst Modal = ({msg, showing, reset}) => {\r\n  const [isShow, setIsShow] = useState(showing)\r\n\r\n  return (\r\n    <ModalWrapper isShow={isShow}>\r\n      <h2>{msg}</h2>\r\n      <div>\r\n        <button onClick={reset}>Restart</button>\r\n        <button onClick={() => setIsShow(false)}>Back</button>\r\n      </div>\r\n    </ModalWrapper>\r\n  )\r\n}\r\n\r\nexport default Modal","import styled from 'styled-components'\r\nimport { GAME_SIZE } from '../constants/data'\r\n\r\n\r\nconst BoardWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  border: 1px solid #666;\r\n  border-radius: 2px;\r\n  width: 38rem;\r\n  height: 38rem;\r\n  display: flex;\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  flex-wrap: wrap;\r\n  background: #BB9966;\r\n  box-shadow: 6px 6px 10px rgba(51,51,51,0.6);\r\n  position: relative;\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    inset: 0;\r\n    border: calc(1rem - .4px) solid #BB9966;\r\n    pointer-events: none;\r\n  }\r\n\r\n  i:hover {\r\n    opacity: .4;\r\n    ${({hover}) => hover && `\r\n      background: linear-gradient(315deg, #dadada, #fff);\r\n      box-shadow: inset 16px 14px 10px 1px #000, -3px -3px 3px -2px #353232;\r\n    `}\r\n\r\n    ${({hover}) => !hover && `\r\n      background: linear-gradient(315deg, #ccc, #111);\r\n      box-shadow: inset 16px 14px 10px 1px #ddd, -3px -3px 3px -2px #666;\r\n    `}\r\n  }\r\n\r\n`\r\n\r\nconst SquareWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  /* border: 1px solid #aaa; */\r\n  border-radius: 2px;\r\n  width: calc(100%/${GAME_SIZE});\r\n  height: calc(100%/${GAME_SIZE});\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  position: relative;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 50%;\r\n    border-left: 1px solid #111;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 50%;\r\n    border-top: 1px solid #111;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  i.chess {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    border-radius: 50%;\r\n    width: 1.4rem;\r\n    height: 1.4rem;\r\n    z-index: 1;\r\n    \r\n\r\n    /* Black chess */\r\n    ${({chess}) => (chess === 1 || chess === 6) && `\r\n      background: linear-gradient(315deg, #dadada, #fff);\r\n      box-shadow: inset 16px 14px 10px 1px #000, -3px -3px 3px -2px #353232;\r\n      opacity: 1;\r\n    `}\r\n\r\n    /* White chess */\r\n    ${({chess}) => (chess === 2 || chess === 7) && `\r\n      background: linear-gradient(315deg, #ccc, #111);\r\n      box-shadow: inset 16px 14px 10px 1px #ddd, -3px -3px 3px -2px #666;\r\n      opacity: 1;\r\n    `}\r\n\r\n    /* Winner chess */\r\n    ${({chess}) => (chess === 6 || chess === 7) && `\r\n      animation: shine 1.5s infinite;\r\n    `}\r\n\r\n    @keyframes shine{\r\n      10% {\r\n        opacity: 1;\r\n        transition-property: left, top, opacity;\r\n        transition-duration: 0.7s, 0.7s, 0.15s;\r\n        transition-timing-function: ease;\r\n      }\r\n      100% {\r\n        opacity: 0;\r\n        transition-property: left, top, opacity;\r\n      }\r\n    }\r\n\r\n    &:active {\r\n      transform: translate(-60%, -60%);\r\n    }\r\n\r\n    &::after {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      border-radius: 50%;\r\n      ${({mark, chess}) => (mark && !chess) && `\r\n        content: '';\r\n        width: .5rem;\r\n        height: .5rem;\r\n        background: #111;\r\n      `}\r\n    }\r\n  }\r\n`\r\n\r\nconst isMark = (row, col) => [4, 10, 16].includes(row + 1) && [4, 10, 16].includes(col + 1)\r\n\r\nconst GameBoard = ({winner, winnerBoard, hover, squares, onClick}) => {\r\n  \r\n  return (\r\n    <BoardWrapper hover={hover} >\r\n      { \r\n        (winner ? winnerBoard : squares).map((row_square, row) => (\r\n          row_square.map((col_square, col) => (\r\n            <SquareWrapper \r\n              key={`${row}-${col}`} \r\n              chess={col_square}\r\n              mark={isMark(row, col)}\r\n              onClick={() => onClick(row, col)}\r\n            >\r\n              <i className='chess'></i>\r\n            </SquareWrapper>\r\n          ))\r\n        ))\r\n      }\r\n    </BoardWrapper>\r\n  );\r\n}\r\n\r\nexport default GameBoard;","export const GAME_SIZE = 19\r\n\r\nexport const ARTHUR = 'Enzo Luo'\r\nexport const ARTHUR_MAIL = 'coolizz1010@gmail.com'\r\nexport const COPYRIGHT_YEAR = '2021'\r\n","import { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst GameInfoWrapper = styled.div`\r\n  width: 240px;\r\n  height: 38rem;\r\n  overflow: auto;\r\n  margin-left: 2rem;\r\n  padding-left: 1rem;\r\n\r\n  @media only screen and (max-width: 1080px) {\r\n    width: 90%;\r\n    text-align: center;\r\n    font-size: 2.5rem;\r\n    margin-top: 4rem;\r\n    button {\r\n      width: 80%;\r\n      font-size: 1.5rem;\r\n      padding: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  font-family: \"Cyber\", Futura, sans-serif;\r\n  font-size: 1.1rem;\r\n  width: 80%;\r\n  padding: .3rem .4rem;\r\n  margin: .4rem .2rem 0;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 4px;\r\n  color: #111;\r\n  background: #ccc;\r\n  box-shadow: .1rem .1rem .1rem #999;\r\n  transition: .2s;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  z-index: 1;\r\n\r\n  &:active {\r\n    transform: translateY(.2rem);\r\n    box-shadow: none;\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  ${({active}) => active && `\r\n    font-weight: 900;\r\n    background: #666;\r\n    color: #eee;\r\n    box-shadow: .1rem .1rem .1rem #333;\r\n    transform: scale(1.05);\r\n  `}\r\n\r\n  &:hover {\r\n    background: #666;\r\n    color: #ccc;\r\n  }\r\n`\r\n\r\nconst GameInfo = ({status, stepNumber, history, handleMove}) => {\r\n  const moves = useMemo(() => (history.map((step, move) => (\r\n      <li key={`#${move}`}>\r\n        <Button \r\n          active={stepNumber === move} \r\n          onClick={() => handleMove(move)}>\r\n          {move ? ('Go to move #' + move) : ('Go to game start')}\r\n        </Button>\r\n      </li>\r\n    )\r\n  )), [history, stepNumber, handleMove])\r\n\r\n  return (\r\n    <GameInfoWrapper>\r\n      <div>{status}</div>\r\n      <div>current step: {stepNumber}</div>\r\n      <ul>{moves}</ul>\r\n    </GameInfoWrapper>\r\n  )\r\n}\r\n\r\nexport default GameInfo","import styled from 'styled-components'\r\nimport { ARTHUR, ARTHUR_MAIL, COPYRIGHT_YEAR } from '../constants/data'\r\n\r\nconst FooterWrapper = styled.footer`\r\n  position: relative;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  letter-spacing: 0.05rem;\r\n  background: transparent;\r\n  text-align: center;\r\n  padding: 0.1rem 0.5rem;\r\n  margin-top: 4rem;\r\n  user-select: none;\r\n  z-index: -1;\r\n\r\n  span {\r\n    display: block;\r\n    font-size: 1.5rem;\r\n    font-weight: 300;\r\n    margin-bottom: 0.7rem;\r\n    margin-top: 0.2rem;\r\n  }\r\n\r\n  a {\r\n    color: #6a89cc;\r\n    text-decoration: none;\r\n    font-style: italic;\r\n  }\r\n`\r\n\r\nconst Footer = () => (\r\n  <FooterWrapper>\r\n    <span>&copy; copyright {COPYRIGHT_YEAR} by <a href={`mailto:${ARTHUR_MAIL}`}>{ARTHUR}</a></span>\r\n  </FooterWrapper>\r\n)\r\n\r\nexport default Footer","import './App.css'\r\nimport { useState, useMemo, useCallback } from 'react'\r\nimport { GAME_SIZE } from '../constants/data'\r\nimport { calculateWinner } from '../utils'\r\nimport Modal from './Modal'\r\nimport GameBoard from './GameBoard'\r\nimport GameInfo from './GameInfo'\r\nimport Footer from './Footer'\r\n\r\n\r\nconst App = () => {\r\n  const [history, setHistory] = useState(() => [{ squares: Array(GAME_SIZE).fill().map(() => Array(GAME_SIZE).fill(0)), coordinate: [null, null] }])\r\n  const [blackIsNext, setBlackIsNext] = useState(true)\r\n  const [stepNumber, setStepNumber] = useState(0)\r\n\r\n  // [squares, coordinate]\r\n  const currentStatus = useMemo(() => history[stepNumber], [history, stepNumber])\r\n  const winner = useMemo(() => calculateWinner(currentStatus.squares, ...currentStatus.coordinate), [currentStatus])\r\n  const statusMsg = useMemo(() => {\r\n    if (winner === 'draw') return 'draw'\r\n    if (winner) {\r\n      setBlackIsNext(null)\r\n      return `Winner is ${winner.current === 1 ? 'Black' : 'White'}`\r\n    } else {\r\n      return 'Next player: ' + (blackIsNext ? 'Black' : 'White')\r\n    }\r\n  }, [winner, blackIsNext])\r\n  const winnerBoard = useMemo(() => {\r\n    if (!winner || winner === 'draw') return\r\n    const tempBoard = JSON.parse(JSON.stringify(currentStatus.squares))\r\n    winner.chess.forEach(([y, x]) => tempBoard[y][x] = tempBoard[y][x] + 5)\r\n\r\n    return tempBoard\r\n  }, [winner, currentStatus])\r\n\r\n  const handleClick = useCallback((row, col) => {\r\n    if (blackIsNext === null || currentStatus.squares[row][col] ) return\r\n    const newHistory = history.slice(0, stepNumber + 1)\r\n    const squares = JSON.parse(JSON.stringify(currentStatus.squares))\r\n    squares[row][col] = blackIsNext ? 1 : 2\r\n    \r\n    setHistory([...newHistory, {squares, coordinate: [row, col]}])\r\n    setStepNumber(newHistory.length)\r\n    setBlackIsNext(!blackIsNext)\r\n  }, [history, blackIsNext, currentStatus.squares, stepNumber])\r\n\r\n  const handleMove = useCallback((move) => {\r\n    setStepNumber(move)\r\n    setBlackIsNext((move % 2) === 0)\r\n  }, [setStepNumber, setBlackIsNext])\r\n\r\n  const renderModal = useCallback(() => (\r\n    <Modal \r\n      msg={statusMsg}\r\n      showing={true}\r\n      reset={() => {\r\n        setStepNumber(0)\r\n        setHistory(history.slice(0, 1))\r\n        setBlackIsNext(true)\r\n      }\r\n    }/>\r\n  ), [statusMsg, history])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"game\">\r\n        { winner && renderModal()}\r\n        <GameBoard\r\n          winner={winner}\r\n          winnerBoard={winnerBoard}\r\n          hover={blackIsNext}\r\n          squares={currentStatus.squares}\r\n          onClick={handleClick}\r\n        />\r\n        <GameInfo\r\n          status={statusMsg}\r\n          stepNumber={stepNumber}\r\n          history={history}\r\n          handleMove={handleMove}\r\n          />\r\n      </div>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}